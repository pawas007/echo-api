version: '3'

networks:
    echo-api:
        driver: bridge

services:
    php:
        build:
            context: .
            dockerfile: ./docker/php/Dockerfile
        container_name: echo_php
        ports:
            - "9000:9000"
            - "6001:6001"
        volumes:
            - ./docker/php/php.ini:/usr/local/etc/php/conf.d/local.ini
            - ./:/var/www
        networks:
            - echo-api
        depends_on:
            -   redis

    proxy:
        image: nginx:alpine
        container_name: echo_nginx
        restart: unless-stopped
        working_dir: /var/www
        tty: true
        ports:
            - "80:80"
        volumes:
            - ./:/var/www
            - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
            - ./docker/nginx/log/:/var/log/nginx
        networks:
            - echo-api
        depends_on:
            - php

    db:
        image: mariadb/server:10.3
        container_name: echo_db
        tty: true
        restart: unless-stopped
        environment:
            MARIADB_ROOT_PASSWORD: ${DB_PASSWORD}
            MARIADB_DATABASE: ${DB_DATABASE}
            MARIADB_USER: ${DB_USERNAME}
            MARIADB_PASSWORD: ${DB_PASSWORD}
            MARIADB_INITDB_SKIP_TZINFO: 1
            MARIADB_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - './docker/mariadb/:/var/lib/mysql'
        ports:
            - "3306:3306"
        networks:
            - echo-api
    mongo:
        image: mongo:3.4
        container_name: echo_mongo
        volumes:
            - './docker/mongo/:/data/db'
        environment:
            - MONGO_INITDB_DATABASE=${DB_MONGO_DATABASE}
            - MONGO_INITDB_ROOT_USERNAME=${DB_MONGO_USERNAME}
            - MONGO_INITDB_ROOT_PASSWORD=${DB_MONGO_PASSWORD}
        ports:
            - "27017:27017"

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: echo_pma
        environment:
            PMA_HOST: db
            PMA_USER: root
            PMA_PASSWORD: ${DB_PASSWORD}
            UPLOAD_LIMIT: 1G
        restart: always
        ports:
            - "8086:80"
        links:
            - db
        networks:
            - echo-api

    redis:
        image: redis:latest
        container_name: echo_redis
        tty: true
        restart: unless-stopped
        ports:
            - "6379:6379"
        environment:
            ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - ./docker/cache/redis:/data
        networks:
            - echo-api

    memcached:
        image: memcached:latest
        container_name: echo_memcached
        tty: true
        restart: unless-stopped
        ports:
            - "11211:11211"
        networks:
            - echo-api

    mailhog:
        image: mailhog/mailhog:latest
        container_name: echo_mailhog
        tty: true
        privileged: true
        logging:
            driver: 'none'
        command: ["-storage=maildir", "-maildir-path=/maildir"]
        volumes:
            - ./docker/mails:/maildir
        ports:
            - "1025:1025"
            - "8025:8025"
        networks:
            - echo-api





